services:
  postgres:
    image: 'postgres'
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
    - postgres:/var/lib/postgresql/data
    networks:
      internal:
        aliases:
          - db

  db_manager:
    build:
      context: ./backend
      dockerfile: ./iot-receiver-database-app/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - internal
    env_file:
      - .env

  backend:
    build:
      context: ./backend
      dockerfile: ./iot-receiver-backend-app/Dockerfile
    ports:
      - '4000:4000'
    depends_on:
      - db_manager
    networks:
      - internal
    env_file:
      - .env

  frontend:
    build: ./frontend/iot-receiver-frontend-app/
    ports:
      - '3000:3000'
    env_file:
      - .env
    networks:
      - internal

  mqtt:
    build:
      context: ./backend
      dockerfile: ./iot-receiver-mqtt-app/Dockerfile
    depends_on:
      - db_manager
    networks:
      - internal
    env_file:
      - .env

volumes:
  postgres:
networks:
  internal:
